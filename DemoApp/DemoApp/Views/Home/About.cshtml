@{
    ViewBag.Title = "About";
}
<script src="http://code.jquery.com/jquery-latest.min.js"></script>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="~/src/d3-timeline.js"></script>

@*<style type="text/css">
    .axis path,
    .axis line {
        fill: none;
        stroke: black;
        shape-rendering: crispEdges;
    }

    .axis text {
        font-family: sans-serif;
        font-size: 10px;
    }

    .timeline-label {
        font-family: sans-serif;
        font-size: 12px;
    }

    #timeline2 .axis {
        transform: translate(0px,40px);
        -ms-transform: translate(0px,40px); /* IE 9 */
        -webkit-transform: translate(0px,40px); /* Safari and Chrome */
        -o-transform: translate(0px,40px); /* Opera */
        -moz-transform: translate(0px,40px); /* Firefox */
    }

    .coloredDiv {
        height: 20px;
        width: 20px;
        float: left;
    }
</style>*@

<script type="text/javascript">
    window.onload = function () {
        var width = 500;
        //var testData = [
        //    {
        //        label: "person a", times: [
        //            { "starting_time": 1355752800000, "ending_time": 1355759900000 },
        //            { "starting_time": 1355767900000, "ending_time": 1355774400000 }]
        //    },
        //    {
        //        label: "person b", times: [
        //            { "starting_time": 1355759910000, "ending_time": 1355761900000 }]
        //    },
        //    {
        //        label: "person c", times: [
        //            { "starting_time": 1355761910000, "ending_time": 1355763910000 }]
        //    }
        //];
        //var chart = d3.timeline();

        //var svg = d3.select("#timeline1").append("svg").attr("width", 500)
        //    .datum(testData).call(chart);

        var labelColorTestData = [
            { label: "person a", times: [{ "label": "Weeee", "starting_time": 1355752800000, "ending_time": 1355759900000, "display": "rect" }, { "color": "blue", "label": "Weeee", "starting_time": 1355767900000, "ending_time": 1355774400000, "display": "rect" }] },
            { label: "person b", times: [{ "label": "Weeee", "starting_time": 1355759910000, "ending_time": 1355761900000 }, ] },
            { label: "person c", times: [{ "label": "Weeee", "starting_time": 1355761910000, "ending_time": 1355763910000 }] }
        ];

        function timelineLabelColor() {
            var chart = d3.timeline()
                    .beginning(1355752800000) // we can optionally add beginning and ending times to speed up rendering a little
                    .ending(1355774400000)
                    .stack() // toggles graph stacking
                    .margin({ left: 70, right: 30, top: 0, bottom: 0 })
                ;
            var svg = d3.select("#timeline2").append("svg").attr("width", width)
                .datum(labelColorTestData).call(chart);
        }

        timelineLabelColor();
        //function timelineCircle() {
        //    var chart = d3.timeline()
        //        .tickFormat(//
        //            {
        //                format: d3.time.format("%I %p"),
        //                tickTime: d3.time.hours,
        //                tickInterval: 1,
        //                tickSize: 30
        //            })
        //        .display("circle"); // toggle between rectangles and circles
        //    var svg = d3.select("#timeline2").append("svg").attr("width", width)
        //        .datum(testData).call(chart);
        //}

        //timelineCircle();
    }

</script>


<body>

    <div>
        <h3>It works with circles too</h3>
        <div id="timeline2"></div>
    </div>
</body>